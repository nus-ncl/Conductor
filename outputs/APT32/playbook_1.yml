---

- hosts: apt_victim
  gather_facts: no
  tasks:
  - name: Download Apache2.2.4
    win_get_url:
      url: https://archive.apache.org/dist/httpd/binaries/win32/apache_2.2.4-win32-x86-no_ssl.msi
      dest: C:\Users\vagrant\apache_2.2.4.msi

  - name: Install Apache2.2.4
    win_package:
      path: C:\Users\vagrant\apache_2.2.4.msi
      state: present

  - name: set environment variable
    ansible.windows.win_path:
      name: PATH
      elements: 
      - C:\Program Files (x86)\Apache Software Foundation\Apache2.2\bin\
      - C:\Program Files (x86)\Apache Software Foundation\
      state: present
      scope: machine

  - name: Check Apache Version
    ansible.windows.win_powershell: 
      script: |
        httpd -v
    register: command_out

  - name: Show Apache Version
    debug:
      var: command_out

  - name: Install Apache2.2.4 as a service
    ansible.windows.win_powershell: 
      script: |
        httpd -k install -n "Apache2.2.4"

  - name: Modify Apache Configuration file
    community.windows.win_lineinfile:
      path: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\conf\httpd.conf
      regex: '^ServerAdmin'
      line: '#ServerAdmin'

  - name: Run Apache 2.2.4
    ansible.windows.win_powershell: 
      script: |
        httpd -k start -n "Apache2.2.4"

  - name: Download Python 3.9
    win_get_url:
      url: https://www.python.org/ftp/python/3.9.9/python-3.9.9-amd64.exe
      dest: C:\Users\vagrant\python-3.9.exe

  - name: Install Python3.9
    ansible.windows.win_package:
      path: C:\Users\vagrant\python-3.9.exe
      arguments:
      - /quiet
      - InstallAllUsers=1
      - PrependPath=1

  - name: Check Python Version
    ansible.windows.win_powershell: 
      script: |
        python -V
    register: command_out

  - name: Show Python Version
    debug:
      var: command_out

  - name: Check Pip Version
    ansible.windows.win_powershell: 
      script: |
        pip -V
    register: command_out

  - name: Show Pip Version
    debug:
      var: command_out

  - name: Copy news.zip
    win_copy:
      src: /home/localuser/news.zip
      dest: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\news.zip

  - name: Decompress news.zip
    community.windows.win_unzip:
      src: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\news.zip
      dest: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\
      delete_archive: yes

  - name: Install pip requirements.txt
    ansible.windows.win_powershell: 
      script: |
        pip install -r "C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\news\requirements.txt"
      #chdir: \Users\vagrant\AppData\Local\Programs\Python\Python39\Scripts\

  - name: Copy flash_update.zip
    win_copy:
      src: /home/localuser/flash_update.zip
      dest: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\news\flash_update.zip

#  - name: Decompress flash_update.zip
#    community.windows.win_unzip:
#      src: C:\Users\vagrant\Downloads\flash_update.zip
#      dest: C:\Users\vagrant\Downloads\
#
#  - name: Run system.py to generate dataexfil.txt
#    ansible.windows.win_powershell: 
#      script: |
#        python C:\Users\vagrant\Downloads\system.py
      #chdir: \Users\vagrant\AppData\Local\Programs\Python\Python39\

#  - name: Uninstall the service of Apache 2.2.4
#    ansible.windows.win_powershell: 
#      script: |
#        httpd -k uninstall -n "Apache2.2.4"
#    register: command_out

#  - name: Stop Apache 2.2.4
#    ansible.windows.win_powershell: 
#      script: |
#        httpd -k stop -n "Apache2.2.4"
#    register: command_out


#  - name: Print Register
#    debug:
#      var: command_out

#  - name: Copy File
#    win_copy:
#      src: C:\Users\vagrant\src.txt
#      dest: C:\dst.txt
#      remote_src: yes

#  - name: CMD is installed
#    debug:
#      msg="{{ command }} is installed"
#    when: command_out.output|length > 0


#    debug:
#      msg="{{ command }} is not installed"
#      var: command_out
#    when: command_out.error|length > 0


#  - name: Print Check Result
#    debug:
#      msg="{{ command_out.error|length }}"
#    when: command_out.error|length > 0

#  - name: Print Check Result
#    debug:
#      msg="{{ python_out }}"
#  - name: Run httpd
#    ansible.windows.win_command: httpd.exe
#    args:
#        chdir: C:\Program Files (x86)\Apache Software Foundation\Apache2.2\bin\
#
  
    
#  - name: set environment variable
#    ansible.windows.win_path:
#      name: PATH
#      elements: 
#      - C:\Users\vagrant\AppData\Local\Programs\Python\Python39\
#      state: present
#      scope: machine

#  - name: (optional)Delete user PATH environment variable
#    ansible.windows.win_environment:
#      name: PATH
#      state: absent
#      level: user

#  - name: Check python version
#    ansible.windows.win_powershell: 
#      script: |
#        python -V
#      chdir: \Users\vagrant\AppData\Local\Programs\Python\Python39\
#    register: command_out
#
#
#  - name: Print Register
#    debug:
#      var: command_out

#  - name: Check pip version
#    ansible.windows.win_powershell: 
#      script: |
#        .\pip.exe -V
#      chdir: \Users\vagrant\AppData\Local\Programs\Python\Python39\Scripts\
#    register: command_out
#
#  - name: Print Register
#    debug:
#      var: command_out

