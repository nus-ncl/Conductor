---

- hosts: VM1
  gather_facts: true
  vars_files:
    - /Users/hkwany/PycharmProjects/Conductor/vars/nginx.yml
  tasks:
    # service: apt-get update & install essentials for a VM
    - name: apt-get update
      become: yes
      become_user: root
      apt:
        update_cache: yes

    - name: apt install essentials
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - net-tools
        - nfs-common
        - software-properties-common

    # service: python2, python-dev, pip2 & pip3
    # For Ubuntu, python-dev and python3-dev
    # For CentOS, python-devel and python3-devel
    - name: apt install python2, python-dev, pip2 & pip3
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - python
        - python-pip
        - python3-pip
        - python-dev

    # service: php7.0 & remove php7.4
    - name: apt-repo & update
      become: yes
      become_user: root
      apt_repository:
        validate_certs: no
        repo: 'ppa:ondrej/php'
        state: present
        update_cache: yes

    - name: apt install
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - libapache2-mod-php7.0
        - php7.0-fpm
        - php7.0
        - php7.0-mysqli
        - php7.0-curl
        - php7.0-gd
        - php7.0-intl
        - php-pear
        - php-imagick
        - php7.0-imap
        - php7.0-mcrypt
        - php-memcache
        - php7.0-pspell
        - php7.0-recode
        - php7.0-sqlite3
        - php7.0-tidy
        - php7.0-xmlrpc
        - php7.0-xsl
        - php7.0-mbstring
        - php-gettext
        - php-apcu

    - name: purge php7.4*
      become: yes
      become_user: root
      shell:
        cmd: apt-get -y purge php7.4*

    # service: django
    - name: pip install django
      pip:
       name: "{{ item }}"
       extra_args: --user
       executable: pip3
      loop:
        - django

    # service: attribution fstab
    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /opt/attribution
        state: directory
        # You must add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: 10.0.2.2:/mnt/sda3/attribution /opt/attribution nfs defaults 0 0
        state: present

    - name: mount /etc/fstab
      become: yes
      become_user: root
      shell: mount -a
      args:
        executable: /usr/bin/bash

    # service: blx
    - name: copy libssl in place if missing
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/blx/dependency/libssl1.0.0_1.0.2g-1ubuntu4.16_amd64.deb
        dest: /home/{{ ansible_env.USER }}/libssl1.0.0_1.0.2g-1ubuntu4.16_amd64.deb
        backup: yes

    - name: install libssl.deb
      become: yes
      become_user: root
      apt:
        deb: /home/{{ ansible_env.USER }}/libssl1.0.0_1.0.2g-1ubuntu4.16_amd64.deb

    - name: unarchive blx folders
      become: yes
      become_user: root
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/blx/blx.tar.gz
        remote_src: no
        copy: yes
        dest: /opt/

 

    # service: binspace
    - name: unarchive binspace
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/binspace/binspace.tar.gz
        remote_src: no
        copy: yes
        dest: /home/{{ ansible_env.USER }}/

    # service: zara
    - name: unarchive zara
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/zara/zara.tar.gz
        remote_src: no
        copy: yes
        dest: /opt/
 

    # service: klara
      # requirements:
      # 1. GNU/Linux (we recommend Ubuntu 16.04 or latest LTS)
      # 2. SQL DB Server: MySQL / MariaDB
      # 3. Python 2.7
      # 4. Python virtualenv package(virtualevnwrapper here)
      # 5. Yara (installed on workers)

    # service: mariadb
    - name: apt install essentials for klara
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - libmysqlclient-dev
        - python-dev
        - mariadb-server

    - name: Extract libmariadb.tar.gz into /usr/lib/x86_64-linux-gnu/
      become: yes
      become_user: root
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/mariadb/dependency/libmariadb.tar.gz
        copy: yes
        dest: /usr/lib/x86_64-linux-gnu/
        extra_opts: ['--strip-components=1']
        #- --strip-components=1

    - name: Create a symbolic link
      become: yes
      become_user: root
      file:
        src: /usr/lib/x86_64-linux-gnu/libmariadb.so
        dest: /usr/lib/x86_64-linux-gnu/libmariadb.so.3
        owner: root
        group: root
        state: link

    - name: copy my_config.h in place if missing
      become: yes
      become_user: root
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/mariadb/dependency/my_config.h
        dest: /usr/include/mysql/my_config.h
        backup: yes
        #owner: vagrant
        #group: vagrant
        #mode: '0644'

    - name: import databases & grants
      script: /Users/hkwany/PycharmProjects/Conductor/services/mariadb/script.sh

    - name: decompression klara project to /var/
      become: yes
      become_user: root
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/klara/projects.tar.gz
        copy: yes
        dest: /var/

    - name: decompression klara to home directory
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/klara/klara.tar.gz
        copy: yes
        dest: /home/{{ ansible_env.USER }}/

    - name: decompression klara overlay to /opt/
      become: yes
      become_user: root
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/klara/klara.overlay.tar.gz
        copy: yes
        dest: /opt/

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /mnt/klara/clean
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /mnt/klara/malware
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: none /mnt/klara/clean overlay auto,defaults,lowerdir=/opt/attribution/collection/clean_50k,upperdir=/opt/klara.overlay/clean/upper,workdir=/opt/klara.overlay/clean/work,comment=klara_clean_50k	0	2
        state: present

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: none /mnt/klara/malware overlay auto,defaults,lowerdir=/opt/attribution/collection/malware,upperdir=/opt/klara.overlay/malware/upper,workdir=/opt/klara.overlay/malware/work,comment=klara_clean	0	2
        state: present

    - name: mount /etc/fstab
      become: yes
      become_user: root
      shell: mount -a
      args:
        executable: /usr/bin/bash

    - name: add line to /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        # YAML requires escape strings('\') to be enclosed by double-quotes(" ")
        line: "127.0.0.1\tklara.ncl.sg"
        state: present

    # service: create user & group
    - name: create group projects for klara
      become: yes
      become_user: root
      group:
        name: projects
        gid: 500
        state: present

    - name: create user projects under groups projects & sudo for klara
      become: yes
      become_user: root
      user:
        name: projects
        shell: /bin/bash
        create_home: yes
        uid: 500
        groups: projects,sudo

    - name: copy pip_requirements for klara in place
      become: yes
      become_user: projects
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/klara/pip_requirements.txt
        dest: ~/pip_requirements.txt
        #owner: projects
        #group: projects
        #mode: '0644'

    - name: update .bashrc of user 'projects'
      become: yes
      become_user: projects
      lineinfile:
        path: ~/.bashrc
        # YAML requires escape strings('\') to be enclosed by double-quotes(" ")
        line: "export PATH='$PATH:/home/projects/.local/bin'\nexport WORKON_HOME='~/.virtualenv'\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nsource /home/projects/.local/bin/virtualenvwrapper.sh"
        state: present

    # yes | pip3 install virtualenvwrapper --user
    - name: pip3 install virtualenvwrapper under user 'projects'
      become: yes
      become_user: projects
      pip:
       name: virtualenvwrapper
       extra_args: --user
       executable: pip3

    # service: create virtualenv
    - name: Create the virtualenv 'klara'
      become: yes
      become_user: projects
      shell:
           export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/home/projects/.local/bin'

           export WORKON_HOME='~/.virtualenv'

           export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3

           . /home/projects/.local/bin/virtualenvwrapper.sh

           mkvirtualenv klara --python=python2
      args:
        executable: /usr/bin/bash
        creates: ~/.virtualenv/klara

    - name: pip install requirements(under 'projects' in virtualenv 'klara')
      become: yes
      become_user: projects
      pip:
        requirements=~/pip_requirements.txt
        virtualenv=/home/projects/.virtualenv/klara

    # service: supervisor
    - name: pip install supervisor
      become: yes
      become_user: root
      pip:
       name: supervisor
       executable: pip3

    - name: prepare supervisor folders
      become: yes
      become_user: root
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/supervisor/supervisor.tar.gz
        copy: yes
        dest: /etc/

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /var/log/supervisor
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: Running supervisor
      become: yes
      become_user: root
      shell: supervisord -c /etc/supervisor/supervisord.conf

- hosts: VM2
  gather_facts: true
  vars_files:
    - /Users/hkwany/PycharmProjects/Conductor/vars/nginx.yml
  tasks:
    # service: apt-get update & install essentials for a VM
    - name: apt-get update
      become: yes
      become_user: root
      apt:
        update_cache: yes

    - name: apt install essentials2
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - net-tools
        - nfs-common
        - libcurl4-openssl-dev
        - cmake
        - python3.7-dev
        - libssl-dev
        - python3-pip

    # service: django2
    - name: pip install django
      pip:
       name: "{{ item }}"
       extra_args: --user
       executable: pip3
      loop:
        - django

    - name: decompression django folder to home/
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/django2/sherlock-website-django.tar.gz
        copy: yes
        dest: /home/{{ ansible_env.USER }}/

    # service: attribution fstab
    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /opt/attribution
        state: directory
        # You must add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: 10.0.2.2:/mnt/sda3/attribution /opt/attribution nfs defaults 0 0
        state: present

    - name: mount /etc/fstab
      become: yes
      become_user: root
      shell: mount -a
      args:
        executable: /usr/bin/bash

    # service: FlowSim
    - name: decompression FlowSim folder to home directory
      unarchive:
        src: /Users/hkwany/PycharmProjects/Conductor/services/flowsim/FlowSim.tar.gz
        copy: yes
        dest: /home/{{ ansible_env.USER }}/

    - name: Create a symbolic link
      file:
        src: /home/{{ ansible_env.USER }}/TaintRuleDB
        dest: /opt/attribution/flowsim/TaintRuleDB
        state: link

    - name: copy libkeystone.so
      become: yes
      become_user: root
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/flowsim/libkeystone.so
        dest: /usr/local/lib/libkeystone.so

    - name: copy keystone.py
      become: no
      become_user: root
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/flowsim/keystone.py
        dest: ~/.local/lib/python3.7/site-packages/keystone/keystone.py

    - name: expand swap
      become: yes
      become_user: root
      shell:
           mkdir /usr/img
           rm -rf /usr/img/swap
           dd if=/dev/zero of=/usr/img/swap bs=1024 count=2048000
           mkswap /usr/img/swap
           swapon /usr/img/swapexport
      args:
        executable: /usr/bin/bash

    - name: pip install requirements
      pip:
        requirements: /Users/hkwany/PycharmProjects/Conductor/services/flowsim/VM2_pip_requirements.txt
        extra_args: --user
        executable: pip3

    - name: copy squirrel
      become: no
      become_user: root
      copy:
        src: /Users/hkwany/PycharmProjects/Conductor/services/flowsim/squirrel_framework-0.1.12-py3-none-any.whl
        dest: /home/{{ ansible_env.USER }}/squirrel_framework-0.1.12-py3-none-any.whl

    - name: pip install squirrel
      pip:
        name: file:///home/{{ ansible_env.USER }}/squirrel_framework-0.1.12-py3-none-any.whl
        extra_args: --user
        executable: pip3



