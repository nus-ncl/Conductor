    # service: klara
      # requirements:
      # 1. GNU/Linux (we recommend Ubuntu 16.04 or latest LTS)
      # 2. SQL DB Server: MySQL / MariaDB
      # 3. Python 2.7
      # 4. Python virtualenv package(virtualevnwrapper here)
      # 5. Yara (installed on workers)

    # service: mariadb
    {% raw %}
    - name: apt install essentials for klara
      become: yes
      become_user: root
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - nfs-common
        - libmysqlclient-dev
        - python-dev
        - mariadb-server
    {% endraw %}

    - name: Extract libmariadb.tar.gz into /usr/lib/x86_64-linux-gnu/
      become: yes
      become_user: root
      unarchive:
        src: {{ conductor_path }}/services/mariadb/dependency/libmariadb.tar.gz
        copy: yes
        dest: /usr/lib/x86_64-linux-gnu/
        extra_opts: ['--strip-components=1']
        #- --strip-components=1

    - name: Create a symbolic link
      become: yes
      become_user: root
      file:
        src: /usr/lib/x86_64-linux-gnu/libmariadb.so
        dest: /usr/lib/x86_64-linux-gnu/libmariadb.so.3
        owner: root
        group: root
        state: link

    - name: copy my_config.h in place if missing
      become: yes
      become_user: root
      copy:
        src: {{ conductor_path }}/services/mariadb/dependency/my_config.h
        dest: /usr/include/mysql/my_config.h
        backup: yes
        #owner: vagrant
        #group: vagrant
        #mode: '0644'

    - name: copy sherlock_VM1_all_databases.sql to home/
      copy:
        src: {{ conductor_path }}/services/mariadb/sherlock_VM1_all_databases.sql
        dest: /home/{{ USER }}/sherlock_VM1_all_databases.sql

    - name: copy sherlock_VM1_all_grants.sql to home/
      copy:
        src: {{ conductor_path }}/services/mariadb/sherlock_VM1_all_grants.sql
        dest: /home/{{ USER }}/sherlock_VM1_all_grants.sql

    - name: import databases & grants
      script: {{ conductor_path }}/services/mariadb/script.sh

    - name: delete sherlock_VM1_all_databases.sql from home/
      file:
        path: /home/{{ USER }}/sherlock_VM1_all_databases.sql
        state: absent

    - name: delete sherlock_VM1_all_grants.sql from home/
      file:
        path: /home/{{ USER }}/sherlock_VM1_all_grants.sql
        state: absent

    - name: decompression klara project to /var/
      become: yes
      become_user: root
      unarchive:
        src: {{ conductor_path }}/services/klara/projects.tar.gz
        copy: yes
        dest: /var/

    - name: decompression klara to home directory
      unarchive:
        src: {{ conductor_path }}/services/klara/klara.tar.gz
        copy: yes
        dest: /home/{{ USER }}/

    - name: decompression klara overlay to /opt/
      become: yes
      become_user: root
      unarchive:
        src: {{ conductor_path }}/services/klara/klara.overlay.tar.gz
        copy: yes
        dest: /opt/

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /mnt/klara/clean
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /mnt/klara/malware
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: none /mnt/klara/clean overlay auto,defaults,lowerdir=/opt/attribution/collection/clean_50k,upperdir=/opt/klara.overlay/clean/upper,workdir=/opt/klara.overlay/clean/work,comment=klara_clean_50k	0	2
        state: present

    - name: add line to /etc/fstab
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        line: none /mnt/klara/malware overlay auto,defaults,lowerdir=/opt/attribution/collection/malware,upperdir=/opt/klara.overlay/malware/upper,workdir=/opt/klara.overlay/malware/work,comment=klara_clean	0	2
        state: present

    - name: mount /etc/fstab
      become: yes
      become_user: root
      shell: mount -a
      args:
        executable: /usr/bin/bash

    - name: add line to /etc/hosts
      become: yes
      become_user: root
      lineinfile:
        path: /etc/fstab
        # YAML requires escape strings('\') to be enclosed by double-quotes(" ")
        line: "127.0.0.1\tklara.ncl.sg"
        state: present

    # service: create user & group
    - name: create group projects for klara
      become: yes
      become_user: root
      group:
        name: projects
        gid: 500
        state: present

    - name: create user projects under groups projects & sudo for klara
      become: yes
      become_user: root
      user:
        name: projects
        shell: /bin/bash
        create_home: yes
        uid: 500
        groups: projects,sudo

    - name: copy pip_requirements for klara in place
      become: yes
      become_user: projects
      copy:
        src: {{ conductor_path }}/services/klara/pip_requirements.txt
        dest: ~/pip_requirements.txt
        #owner: projects
        #group: projects
        #mode: '0644'

    - name: update .bashrc of user 'projects'
      become: yes
      become_user: projects
      lineinfile:
        path: ~/.bashrc
        # YAML requires escape strings('\') to be enclosed by double-quotes(" ")
        line: "export PATH='$PATH:/home/projects/.local/bin'\nexport WORKON_HOME='~/.virtualenv'\nexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3\nsource /home/projects/.local/bin/virtualenvwrapper.sh"
        state: present

    # yes | pip3 install virtualenvwrapper --user
    - name: pip3 install virtualenvwrapper under user 'projects'
      become: yes
      become_user: projects
      pip:
       name: virtualenvwrapper
       extra_args: --user
       executable: pip3

    # service: create virtualenv
    - name: Create the virtualenv 'klara'
      become: yes
      become_user: projects
      shell:
           export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/home/projects/.local/bin'

           export WORKON_HOME='~/.virtualenv'

           export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3

           . /home/projects/.local/bin/virtualenvwrapper.sh

           mkvirtualenv klara --python=python2
      args:
        executable: /usr/bin/bash
        creates: ~/.virtualenv/klara

    - name: pip install requirements(under 'projects' in virtualenv 'klara')
      become: yes
      become_user: projects
      pip:
        requirements=~/pip_requirements.txt
        virtualenv=/home/projects/.virtualenv/klara

    # service: supervisor
    - name: pip install supervisor
      become: yes
      become_user: root
      pip:
       name: supervisor
       executable: pip3

    - name: prepare supervisor folders
      become: yes
      become_user: root
      unarchive:
        src: {{ conductor_path }}/services/supervisor/supervisor.tar.gz
        copy: yes
        dest: /etc/

    - name: Create a directory if it does not exist
      become: yes
      become_user: root
      file:
        path: /var/log/supervisor
        state: directory
        # You must either add a leading zero so that Ansible YAML parser knows it's an octal number
        mode: '0755'

    - name: Running supervisor
      become: yes
      become_user: root
      shell: supervisord -c /etc/supervisor/supervisord.conf
