metadata:
  repositories:
  {% for repo in repositories['package'] %}
    - id: pack_{{ loop.index }}
      uri: repo
  {% endfor %}
  {% for repo in repositories['artifact'] %}
    - id: pack_{{ loop.index }}
      uri: repo
  {% endfor %}
  {% for repo in repositories['dependency'] %}
    - id: dependency_{{ loop.index }}
      uri: repo
  {% endfor %}
  experiment_name: {{ experiment_name }}

{% instance template
name: null
uri: null
os: null
packages: []
  - name: null
    type: null
    source_addr: null
artifacts: []
  - name: null
    type: null
    source_addr: null
	dest_addr: null
%}
{% set instances=[] %}
instances:
  {% for event in events %}
  one_instance = instance_template(subject, object, package, artifact)
  instances.append(one_instance)
  {% endfor %}
  integrate(instances) # sort & integrate

{% network template
name: null
endpoints: []
  -
%}
{% set networks=[] %}
networks:
  {% for event in events %}
  one_lan = lan_template(subject, object)
  networks.append(one_lan)
  {% endfor %}
  integrate(networks) # sort & integrate

{% event class
order: null
place: null
{%- if type == 'package' or if type == 'file' %}
package_name: null
package_parameters: []
  - par_name: uri
    par_value:
{%- endif %}
{%- if type == 'exec' or if type == 'script' %}
artifact_name: null
artifact_parameter: []
  - par_name: uri
    par_value:
{%- endif %}
delay_before: nulls
delay_after: nulls
description: null
%}
{% set events=[] %}
events:
  {% for event in events %}
  one_event = event_class(event)
  events.append(one_event)
  {% endfor %}